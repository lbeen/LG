<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.report.cockpit.mapper.MachineCockpitMapper">
    <select id="totalEquipmentMaintenanceTime" parameterType="Map" resultType="double">
        SELECT
            SUM(CASE WHEN LENGTH(T.REPAIRORDER_ID_S) > 0 THEN
                    (SELECT (CAST(TT.REPAIR_ENDTIME_T AS DATE) - CAST(TT.CREATION_TIME AS DATE)) * 24
                            FROM AT_EM_REPAIRORDER TT WHERE TT.REPAIRORDER_ID_S = T.REPAIRORDER_ID_S)
                       ELSE (CAST(T.END_TIME_T AS DATE) - CAST(T.CREATION_TIME AS DATE)) * 24 END) V
        FROM AT_EM_REPAIRREASON T1 LEFT JOIN AT_EM_DOWNTIMERECORD T
            ON T1.DEVICE_IDENTIFIER_S=SUBSTR(T.EQUIPMENT_NUMBER_S, 0, 3) AND T1.STOP_TYPE1_S = T.STOP_TYPE1_S
                AND T1.STOP_TYPE2_S=T.STOP_TYPE2_S AND T1.DETAILED_PROJECT_S = T.DETAILED_PROJECT_S
        WHERE T.DETAILED_PROJECT_S IS NOT NULL
            AND T1.AREA_S LIKE '机加%'
            AND T1.DEVICE_IDENTIFIER_S = #{process}
            AND T.RECORD_TIME_T >= TO_DATE(#{startTime},'YYYY-MM-DD HH24:MI:SS')
            AND T.RECORD_TIME_T &lt; TO_DATE(#{endTime},'YYYY-MM-DD HH24:MI:SS')
    </select>
    <select id="equipmentMaintenanceTime" parameterType="Map" resultType="Record">
        SELECT T.EQUIPMENT_NUMBER_S                              K2,
               T1.STOP_TYPE2_S                                   K1,
               (CASE
                    WHEN LENGTH(T.REPAIRORDER_ID_S) > 0 THEN
                        ROUND((SELECT (CAST(TT.REPAIR_ENDTIME_T AS DATE) - CAST(TT.CREATION_TIME AS DATE)) * 24
                               FROM AT_EM_REPAIRORDER TT
                               WHERE TT.REPAIRORDER_ID_S = T.REPAIRORDER_ID_S), 2)
                    ELSE ROUND((CAST(T.END_TIME_T AS DATE) - CAST(T.CREATION_TIME AS DATE)) * 24, 2) END) V
        FROM AT_EM_REPAIRREASON T1
                 LEFT JOIN AT_EM_DOWNTIMERECORD T
                           ON T1.DEVICE_IDENTIFIER_S = SUBSTR(T.EQUIPMENT_NUMBER_S, 0, 3)
                               AND T1.STOP_TYPE1_S = T.STOP_TYPE1_S
                               AND T1.STOP_TYPE2_S = T.STOP_TYPE2_S
                               AND T1.DETAILED_PROJECT_S = T.DETAILED_PROJECT_S
        WHERE T.DETAILED_PROJECT_S IS NOT NULL
          AND T1.AREA_S LIKE '机加%'
          AND T1.DEVICE_IDENTIFIER_S = #{process}
          AND T.RECORD_TIME_T >= TO_DATE(#{startTime},'YYYY-MM-DD HH24:MI:SS')
          AND T.RECORD_TIME_T &lt; TO_DATE(#{endTime},'YYYY-MM-DD HH24:MI:SS')
    </select>
    <select id="totalEquipmentWaitingTime" parameterType="Map" resultType="double">
        SELECT ROUND(SUM(T.EM_STOPOFTIME_MIN/60), 2) V FROM IF_EM_STOP T
        WHERE SUBSTR(T.EM_CODE,0,3) = #{process}
          AND T.END_TIME_STOP >= TO_DATE(#{startTime},'YYYY-MM-DD HH24:MI:SS')
          AND T.END_TIME_STOP &lt; TO_DATE(#{endTime},'YYYY-MM-DD HH24:MI:SS')
    </select>
    <select id="equipmentWaitingTime" parameterType="Map" resultType="Record">
        SELECT T.EM_CODE K, COUNT(1) V1, ROUND(SUM(T.EM_STOPOFTIME_MIN/60), 2) V2
        FROM IF_EM_STOP T
        WHERE SUBSTR(T.EM_CODE,0,3) = #{process}
          AND T.END_TIME_STOP >= TO_DATE(#{startTime},'YYYY-MM-DD HH24:MI:SS')
          AND T.END_TIME_STOP &lt; TO_DATE(#{endTime},'YYYY-MM-DD HH24:MI:SS')
        GROUP BY T.EM_CODE
    </select>
    <select id="equipmentCount" parameterType="Map" resultType="double">
        SELECT COUNT(1) FROM EQUIPMENT E JOIN UDA_EQUIPMENT U ON U.OBJECT_KEY=E.EQUIP_KEY
        WHERE  SUBSTR(E.EQUIP_NAME,1,3) = #{process} AND U.STATUS_I=10
    </select>

    <select id="totalPayLength" resultType="double">
        SELECT SUM(UNQUALIFIED_LENGTH_F) FROM AT_QM_UNQUALIFIEDREVIEW
        WHERE DUTYDEPART_I=#{process}
          AND CREATION_TIME >= TO_DATE(#{startTime},'YYYY-MM-DD HH24:MI:SS')
          AND CREATION_TIME &lt; TO_DATE(#{endTime},'YYYY-MM-DD HH24:MI:SS')
    </select>
    <select id="payLengthByReason" resultType="Record">
        SELECT BAD_GRADES2_S K,SUM(UNQUALIFIED_LENGTH_F) V FROM AT_QM_UNQUALIFIEDREVIEW
        WHERE DUTYDEPART_I=#{process}
          AND CREATION_TIME >= TO_DATE(#{startTime},'YYYY-MM-DD HH24:MI:SS')
          AND CREATION_TIME &lt; TO_DATE(#{endTime},'YYYY-MM-DD HH24:MI:SS')
        GROUP BY BAD_GRADES2_S HAVING SUM(UNQUALIFIED_LENGTH_F)>0
    </select>
</mapper>